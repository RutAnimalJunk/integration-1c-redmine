
&Насервере
Перем ОбъектЭтойОбработки;

&НаКлиенте
Перем УспешнаяИнициализация;


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	//УстановитьКонтекстОбщенияССервером();
	
	УстановитьВидимость();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьКонтекстОбщенияССервером()
	
	Обработка = РеквизитФормыВЗначение("Объект");
	
	Объект.МодульОбъекта = Обработка;
	
КонецПроцедуры



////////////////////////////////////////////////////////////////////////////////
// ПОВТОРЯЮЩИЕСЯ ДЕЙСТВИЯ ПРИ ИЗМЕНЕНИИ РАЗНЫХ РЕКВИЗИТОВ

&НаКлиенте
Процедура УстановитьВидимость()
	
	Элементы.Пароль.Видимость			= Объект.БазоваяАутентификация;
	Элементы.Пользователь.Видимость		= Объект.БазоваяАутентификация;
	Элементы.APIkey.Видимость			= Не Объект.БазоваяАутентификация;
	Элементы.ДекорацияAPIKey.Видимость	= Не Объект.БазоваяАутентификация;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьДоступность()
	
	Элементы.СписокЗадачДобавитьЗадачу.Доступность		= УспешнаяИнициализация;
	Элементы.Изменить.Доступность						= УспешнаяИнициализация;
	Элементы.СписокЗадачОбновитьСписокЗадач.Доступность	= УспешнаяИнициализация;
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ КНОПОК КОМАНДНЫХ ПАНЕЛЕЙ ФОРМЫ

&НаКлиенте
Процедура ИнициализацияПриСтартеПриИзменении(Элемент)
	Перем Параметр;
	
	Если НЕ Объект.ИнициализацияПриСтарте Тогда
		Возврат;
	КонецЕсли;
	
	Оповещение = Новый ОписаниеОповещения("ОбработатьВыборПользователя", ЭтаФорма, Параметр);
	ПоказатьВопрос(Оповещение, "Выполнить инициализацию параметров обработки из трекера?", РежимДиалогаВопрос.ДаНет);

КонецПроцедуры

&НаКлиенте
Процедура ПоказатьНастройки(Команда)
	
	мПоказатьНастройки = Не Элементы.ПоказатьНастройки.Пометка;
	
	Элементы.ГруппаНастройки.Видимость	= мПоказатьНастройки;
	Элементы.ПоказатьНастройки.Пометка	= мПоказатьНастройки;
		
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьЗадачу(Команда)
	Сообщить("Данная опция еще не реализована!");
КонецПроцедуры

&НаКлиенте
Процедура УстановитьФлажки(Команда)
	Сообщить("Данная опция еще не реализована!");
КонецПроцедуры

&НаКлиенте
Процедура Редактировать(Команда)
	Сообщить("Данная опция еще не реализована!");
КонецПроцедуры

&НаКлиенте
Процедура УдалитьЗадачу(Команда)
	Сообщить("Данная опция еще не реализована!");
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСписокЗадач(Команда)
	Сообщить("Данная опция еще не реализована!");
КонецПроцедуры

&НаКлиенте
Процедура ПроверкаСоединения(Команда)
	Перем Параметр;
	
	ОтчетОВыполнении = ВыполнитьПроверкуСоединенияИнициализациюНаСервере();
	
	Если ОтчетОВыполнении.ЕстьОшибки Тогда
		ПоказатьПредупреждение(, ОтчетОВыполнении.ТекстОшибки);
	Иначе
		Оповещение = Новый ОписаниеОповещения("ОбработатьВыборПользователя", ЭтаФорма, Параметр);
		ПоказатьВопрос(Оповещение, "Подключение к серверу выполнено успешно! 
								   |Выполнить инициализацию основных параметров обработки?", РежимДиалогаВопрос.ДаНет);
	КонецЕсли;
	
	УстановитьВидимость();
	
КонецПроцедуры

&НаКлиенте
Процедура НастройкаПериода(Команда)
	
	СтандартныйПериод = Новый СтандартныйПериод(ВариантСтандартногоПериода.ПроизвольныйПериод);
	
	Диалог = Новый ДиалогРедактированияСтандартногоПериода;
	Диалог.Период = СтандартныйПериод;
	
	Если Диалог.Редактировать() Тогда
		
		СтандартныйПериод = Диалог.Период;
		
		ДатаНач = СтандартныйПериод.ДатаНачала;
		ДатаКон = СтандартныйПериод.ДатаОкончания;

	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьВыборПользователя(Результат, Параметр) Экспорт // "Выполнить инициализацию параметров обработки из трекера?"
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		ОтчетОВыполнении = ВыполнитьИнициализациюОсновныхПараметровОбработки();

		Если ОтчетОВыполнении.ЕстьОшибки Тогда
			ПоказатьПредупреждение(, ОтчетОВыполнении.ТекстОшибки);
		Иначе
			УспешнаяИнициализация = Истина;
			Если Не Объект.ИнициализацияПриСтарте Тогда
				Объект.ИнициализацияПриСтарте = Истина;	
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Если УспешнаяИнициализация Тогда
		//ЗаполнитьСписокВыбораПроекта();
		//ПерезаполнитьСписокЗапросов();
		//ЗаполнитьТаблицуНастраиваемыхПолей();
	КонецЕсли;
	
	УстановитьДоступность();

КонецПроцедуры

&НаСервере
Функция ВыполнитьИнициализациюОсновныхПараметровОбработки()
	
	ОбъектЭтойОбработки().Инициализация(Истина, ?(Проект<>"", Проект, Неопределено));	
	
	Возврат ОбъектЭтойОбработки().ОтчетОВыполнении;
	
КонецФункции


&НаСервере
Функция ВыполнитьПроверкуСоединенияИнициализациюНаСервере()
	
	Данные = ОбъектЭтойОбработки().ПолучитьДанныеРесурсаИзТрекера("projects");
	
	ОтчетОВыполнении = ОбъектЭтойОбработки().ОтчетОВыполнении;
	
	Если НЕ ОтчетОВыполнении.ЕстьОшибки Тогда
		
		Если Данные["projects"].Количество() = 0 Тогда
			ОтчетОВыполнении.ТекстОшибки = "Список проектов, полученный из трекера, пуст, добавьте проект или обратитесь к администратору для проверки прав доступа в системе Redmine для текущего пользователя.";
			ОтчетОВыполнении.ЕстьОшибки = Истина;
		КонецЕсли;
		ОбъектЭтойОбработки().Инициализация(Истина, ?(Проект<>"", Проект, Неопределено));
	КонецЕсли;
	
	Возврат ОтчетОВыполнении;
	
КонецФункции


#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция ОбъектЭтойОбработки()

	Если ОбъектЭтойОбработки = Неопределено Тогда
		ОбъектЭтойОбработки = РеквизитФормыВЗначение("Объект");
	КонецЕсли;
	
	Возврат ОбъектЭтойОбработки;

КонецФункции


&НаСервере
Процедура ДобавитьКнопкуПерезапуска()
	НоваяКоманда = ЭтаФорма.Команды.Добавить("кфПерезапуск");
    НоваяКоманда.Действие= "кфПерезапустить";
    НовыйЭлемент = Элементы.Добавить("кфПерезапустить", Тип("КнопкаФормы"),Элементы.ФормаКоманднаяПанель);
    НовыйЭлемент.ИмяКоманды = "кфПерезапуск";
	НовыйЭлемент.Картинка = БиблиотекаКартинок.Перечитать;
	НовыйЭлемент.Отображение = ОтображениеКнопки.КартинкаИТекст;
    НовыйЭлемент.Заголовок = "Перезапустить ["+ТекущаяУниверсальнаяДата()+"]";
КонецПроцедуры

&НаКлиенте
Процедура кфПерезапустить(Команда)
    
    СтруктураПереоткрыть = Новый Структура();
    ПереоткрытьНаСервере("Поместить", СтруктураПереоткрыть);
    Если СтруктураПереоткрыть.ФункцияПомещения = "НачатьПомещениеФайла" Тогда
        НачатьПомещениеФайла(,,СтруктураПереоткрыть.ИспользуемоеИмяФайла,Ложь,);
    Иначе
        ПоместитьФайл(,СтруктураПереоткрыть.ИспользуемоеИмяФайла,,Ложь,);
    КонецЕсли;
    ПереоткрытьНаСервере("Создать", СтруктураПереоткрыть);
    ЭтаФорма.Закрыть();
    ОткрытьФорму(СтруктураПереоткрыть.ПолныйПутьИмениФормы);
    
КонецПроцедуры

&НаСервере
Процедура ПереоткрытьНаСервере(Режим, СтруктураПереоткрыть)
    
    Если Режим = "Поместить" Тогда
        СтруктураПереоткрыть.Очистить();
        СтруктураПереоткрыть.Вставить("ФункцияПомещения", ?(СокрЛП(Метаданные.РежимИспользованияМодальности) = "НеИспользовать", "НачатьПомещениеФайла", "ПоместитьФайл"));
        СтруктураПереоткрыть.Вставить("ИспользуемоеИмяФайла", СокрЛП(РеквизитформыВЗначение("Объект").ИспользуемоеИмяФайла));
        СтруктураПереоткрыть.Вставить("ПолныйПутьИмениФормы", СокрЛП(ЭтаФорма.ИмяФормы));
    ИначеЕсли Режим = "Создать" Тогда
        ВнешниеОбработки.Создать(СтруктураПереоткрыть.ИспользуемоеИмяФайла, Ложь);
    КонецЕсли;
    
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
        ДобавитьКнопкуПерезапуска();
КонецПроцедуры


#КонецОбласти 

УспешнаяИнициализация = Ложь;
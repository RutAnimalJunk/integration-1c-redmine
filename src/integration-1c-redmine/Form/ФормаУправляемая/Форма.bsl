
&Насервере
Перем ОбъектЭтойОбработки;


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	//УстановитьКонтекстОбщенияССервером();
	
	УстановитьВидимость();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьКонтекстОбщенияССервером()
	
	Обработка = РеквизитФормыВЗначение("Объект");
	
	Объект.МодульОбъекта = Обработка;
	
КонецПроцедуры



////////////////////////////////////////////////////////////////////////////////
// ПОВТОРЯЮЩИЕСЯ ДЕЙСТВИЯ ПРИ ИЗМЕНЕНИИ РАЗНЫХ РЕКВИЗИТОВ

&НаКлиенте
Процедура УстановитьВидимость()
	
	Элементы.Пароль.Видимость			= Объект.БазоваяАутентификация;
	Элементы.Пользователь.Видимость		= Объект.БазоваяАутентификация;
	Элементы.APIkey.Видимость			= Не Объект.БазоваяАутентификация;
	Элементы.ДекорацияAPIKey.Видимость	= Не Объект.БазоваяАутентификация;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ КНОПОК КОМАНДНЫХ ПАНЕЛЕЙ ФОРМЫ

&НаКлиенте
Процедура ПоказатьНастройки(Команда)
	Сообщить("Данная опция еще не реализована!");
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьЗадачу(Команда)
	Сообщить("Данная опция еще не реализована!");
КонецПроцедуры

&НаКлиенте
Процедура УстановитьФлажки(Команда)
	Сообщить("Данная опция еще не реализована!");
КонецПроцедуры

&НаКлиенте
Процедура Редактировать(Команда)
	Сообщить("Данная опция еще не реализована!");
КонецПроцедуры

&НаКлиенте
Процедура УдалитьЗадачу(Команда)
	Сообщить("Данная опция еще не реализована!");
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСписокЗадач(Команда)
	Сообщить("Данная опция еще не реализована!");
КонецПроцедуры

&НаКлиенте
Процедура ПроверкаСоединения(Команда)
	
	ОтчетОВыполнении = ВыполнитьПроверкуСоединенияИнициализациюНаСервере();
	
	Если ОтчетОВыполнении.ЕстьОшибки Тогда
		Сообщить(ОтчетОВыполнении.ТекстОшибки);
	Иначе
		Сообщить("Подключение к серверу выполнено успешно!");
	КонецЕсли;
	
	УстановитьВидимость();
	//УстановитьДоступность();
	
КонецПроцедуры

&НаСервере
Функция ВыполнитьПроверкуСоединенияИнициализациюНаСервере()
	
	Данные = ОбъектЭтойОбработки().ПолучитьДанныеРесурсаИзТрекера("projects");
	
	ОтчетОВыполнении = ОбъектЭтойОбработки().ОтчетОВыполнении;
	
	Если НЕ ОтчетОВыполнении.ЕстьОшибки Тогда
		
		Если Данные["projects"].Количество() = 0 Тогда
			ОтчетОВыполнении.ТекстОшибки = "Список проектов, полученный из трекера, пуст, добавьте проект или обратитесь к администратору для проверки прав доступа в системе Redmine для текущего пользователя.";
			ОтчетОВыполнении.ЕстьОшибки = Истина;
		КонецЕсли;
		//Закладка{ Решить вопрос инициализации обработки }
		//ОбъектЭтойОбработки().Инициализация(Истина, ?(Проект<>"", Проект, Неопределено));
	Иначе
		ТекстОшибки = ?(ОтчетОВыполнении.ЕстьОшибки, ОтчетОВыполнении.ТекстОшибки, "Проверьте адрес сервера или данные учетной записи пользователя!");
		//Закладка{Заменить Предупреждение } на аналог для упр приложения 
		//Предупреждение(ТекстОшибки, , "Соединение с сервером не выполнено!");
	КонецЕсли;
	
	Возврат ОтчетОВыполнении;
	
КонецФункции

#Область СлужебныеПроцедурыИФункции

	&НаСервере
Функция ОбъектЭтойОбработки()

	Если ОбъектЭтойОбработки = Неопределено Тогда
		ОбъектЭтойОбработки = РеквизитФормыВЗначение("Объект");
	КонецЕсли;
	
	Возврат ОбъектЭтойОбработки;

КонецФункции

	
#КонецОбласти 

